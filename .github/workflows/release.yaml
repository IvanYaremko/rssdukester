name: Release Build

on:
  release:
    types: [created]

jobs:
  # Separate job for Linux and Windows builds
  releases-linux-windows:
    name: Release Binary (Linux/Windows)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows, linux]
        goarch: [amd64]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install MinGW (Windows)
      if: matrix.goos == 'windows'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-mingw-w64-x86-64
        x86_64-w64-mingw32-gcc --version

    - name: Set up dependencies for Linux
      if: matrix.goos == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc libsqlite3-dev

    - name: Build Windows Binary
      if: matrix.goos == 'windows'
      env:
        CGO_ENABLED: 1
        GOOS: windows
        GOARCH: amd64
        CC: x86_64-w64-mingw32-gcc
      run: |
        go build -v -o rssdukester.exe
        ls -la rssdukester.exe

    - name: Build Linux Binary
      if: matrix.goos == 'linux'
      env:
        CGO_ENABLED: 1
        GOOS: linux
        GOARCH: amd64
      run: |
        go build -v -o rssdukester
        ls -la rssdukester

    - name: Package Windows Release
      if: matrix.goos == 'windows'
      run: |
        zip "rssdukester-${{ matrix.goos }}-${{ matrix.goarch }}.zip" rssdukester.exe

    - name: Package Linux Release
      if: matrix.goos == 'linux'
      run: |
        tar czf "rssdukester-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz" rssdukester

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          rssdukester-${{ matrix.goos }}-${{ matrix.goarch }}.*

  # Separate job for macOS build
  releases-macos:
    name: Release Binary (macOS)
    runs-on: macos-latest
    strategy:
      matrix:
        goarch: [amd64]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build macOS Binary
      env:
        CGO_ENABLED: 1
        GOOS: darwin
        GOARCH: amd64
      run: |
        brew install sqlite3
        go build -v -o rssdukester
        ls -la rssdukester

    - name: Package macOS Release
      run: |
        tar czf "rssdukester-darwin-${{ matrix.goarch }}.tar.gz" rssdukester

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: rssdukester-darwin-${{ matrix.goarch }}.tar.gz
